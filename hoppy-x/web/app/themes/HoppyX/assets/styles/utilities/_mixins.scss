// Min Width Breakpoint
@mixin min-width($breakpoint) {
    @media only screen and (min-width: $breakpoint) {
        @content;
    }
}

// Max Width Breakpoint
@mixin max-width($breakpoint) {
    @media only screen and (max-width: ($breakpoint * 16 - 1) / 16) {
        @content;
    }
}

// Link Colours
@mixin action-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {
    color: $normal;
    @if $visited {
        &:visited {
            color: $visited;
        }
    }
    @if $focus {
        &:focus {
            color: $focus;
        }
    }
    @if $hover {
        &:hover {
            color: $hover;
        }
    }
    @if $active {
        &:active {
            color: $active;
        }
    }
}

// Retina Background Image
@mixin retina($background, $width, $height) {
    $newWidth: $width / 2 / 16 + rem;
    $newHeight: $height / 2 / 16 + rem;
    width: $newWidth;
    height: $newHeight;
    background: $background;
    background-size: $newWidth $newHeight;
}

// Ratio Calculator
@mixin ratio-calc($original-width, $original-height, $target-height) {
    $target-width: $original-width / $original-height * $target-height;
    width: $target-width;
    height: $target-height;
    background-size: $target-width $target-height;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

//halftone
//
@mixin silkscreen() {
  position: relative;
  img {
    filter: grayscale(1);
    transition: .3s;
  }
  &:before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: url(#{$image-path}/partials/silkscreen.svg);
    background-size:2px 2px;
    background-repeat: repeat;
    z-index: 1;
  }
  &:hover {
    &:before {
      background-size: 0px 0px;
    }
    img {
      filter: grayscale(0);
    }
  }
}

.center {
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}

@mixin hover-grow($scale: 1.07) {
  transition: transform .12s ease;
  &:hover, &:active, &:focus {
    transform: scale($scale);
    transform-origin: 50% 50%;
  }
}

@mixin grow($scale: 1.07, $time: .12s) {
  transition: transform $time ease;
  transform: scale($scale);
  transform-origin: 50% 50%;
}

@function shadwell($color, $length) {
  $val: 0px 0px $color;
  @for $i from 1 through $length {
    $val: #{$val}, #{$i}px #{$i}px #{$color};
  }
  @return $val;
}

@mixin shadwell($color, $length) {
  text-shadow: shadwell($color, $length);
}
